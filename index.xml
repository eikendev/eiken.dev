<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>eikendev</title><link>https://www.eiken.dev/</link><description>Recent content on eikendev</description><generator>Hugo</generator><language>en-us</language><managingEditor>hello@eiken.dev (eikendev)</managingEditor><webMaster>hello@eiken.dev (eikendev)</webMaster><lastBuildDate>Sun, 20 Mar 2022 11:55:33 +0100</lastBuildDate><atom:link href="https://www.eiken.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Cracking With Hashcat in the Cloud</title><link>https://www.eiken.dev/blog/2022/03/cracking-with-hashcat-in-the-cloud/</link><pubDate>Wed, 16 Mar 2022 21:00:00 +0000</pubDate><author>hello@eiken.dev (eikendev)</author><guid>https://www.eiken.dev/blog/2022/03/cracking-with-hashcat-in-the-cloud/</guid><description>&lt;p>Thanks to the global chip shortage, for about two years certain electronic items are really hard to buy.
This includes graphics cards, those things that make your display useful.
They&amp;rsquo;re also beasts at cracking password hashes.
Admittedly, I waited for the situation to resolve so I can buy a graphics card for a sane price and improve my &lt;a href="https://hashcat.net/hashcat/">hashcat&lt;/a> experience, but I now think this is unlikely to happen anytime soon.
Time to find a modern solution.&lt;/p></description></item><item><title>How to Break Your JAR in 2021 - Decompilation Guide for JARs and APKs</title><link>https://www.eiken.dev/blog/2021/02/how-to-break-your-jar-in-2021-decompilation-guide-for-jars-and-apks/</link><pubDate>Thu, 25 Feb 2021 11:00:00 +0000</pubDate><author>hello@eiken.dev (eikendev)</author><guid>https://www.eiken.dev/blog/2021/02/how-to-break-your-jar-in-2021-decompilation-guide-for-jars-and-apks/</guid><description>&lt;p>In the past few days, I had some fun trying to understand the inner workings of an APK file.
Previously, I had only used the legendary &lt;a href="http://java-decompiler.github.io/">JD-GUI&lt;/a> as a decompiler for some CTF challenges.
But when dealing with more complex code, I found that looking at the output of different decompilers can help.
Hence, I did a little research to find more decompilers that use different approaches.
This post serves as a little reference on how to build and use these tools.&lt;/p></description></item><item><title>Code Spotlight: the Reference Implementation of Ed25519 (Part 1)</title><link>https://www.eiken.dev/blog/2020/11/code-spotlight-the-reference-implementation-of-ed25519-part-1/</link><pubDate>Sun, 22 Nov 2020 19:00:00 +0000</pubDate><author>hello@eiken.dev (eikendev)</author><guid>https://www.eiken.dev/blog/2020/11/code-spotlight-the-reference-implementation-of-ed25519-part-1/</guid><description>&lt;p>Elliptic curve cryptography (ECC) has always been something I wanted to fully understand eventually.
A recent project I worked on has brought me one step closer, but also revealed to me the true complexity of the topic.
I am now convinced that I will probably never fully understand the maths behind ECC.&lt;/p>
&lt;p>However, I discovered something else that I find interesting, although it&amp;rsquo;s not necessarily easier: implementing given schemes.
In this post, I want to take you on a journey to explore a state-of-the-art implementation of a cryptographic scheme.&lt;/p></description></item><item><title>Recent Developments in Control-Flow Integrity</title><link>https://www.eiken.dev/blog/2020/09/recent-developments-in-control-flow-integrity/</link><pubDate>Sat, 12 Sep 2020 21:52:00 +0000</pubDate><author>hello@eiken.dev (eikendev)</author><guid>https://www.eiken.dev/blog/2020/09/recent-developments-in-control-flow-integrity/</guid><description>&lt;p>I was a bit busy in the past few months, but now I&amp;rsquo;m back to talk about some system security.
During my Bachelor&amp;rsquo;s studies, I did a bit of reading on Control-Flow Integrity (CFI).
Recently, I&amp;rsquo;ve stumbled upon a paper on CFI, and while giving it a read I found myself in the need of refreshing the basics.
I thought I could use this opportunity to tell you about CFI and what current research is trying to achieve.&lt;/p></description></item><item><title>Optimizing the Walsh-Hadamard Transform Using SIMD Intrinsics</title><link>https://www.eiken.dev/blog/2020/04/optimizing-the-walsh-hadamard-transform-using-simd-intrinsics/</link><pubDate>Mon, 13 Apr 2020 00:58:27 +0200</pubDate><author>hello@eiken.dev (eikendev)</author><guid>https://www.eiken.dev/blog/2020/04/optimizing-the-walsh-hadamard-transform-using-simd-intrinsics/</guid><description>&lt;p>I&amp;rsquo;m currently studying fast numeric code at university, where I&amp;rsquo;ve been confronted with the problem of optimizing the &lt;a href="https://en.wikipedia.org/wiki/Hadamard_transform">Walsh-Hadamard transform&lt;/a> using SIMD intrinsics.
To be honest, I don&amp;rsquo;t know a lot about the maths behind it, but apparently it has a lot of applications, specifically in cryptography, signal processing and quantum computing.&lt;/p>
&lt;p>Since it was so much fun to apply my fresh knowledge about intrinsics on a real-world problem, I thought it may be worth sharing this experience here on my blog.
Be aware though that I&amp;rsquo;m not an intrinsics-guru, which is why there is certainly more optimized code available.&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;/p></description></item><item><title>How to Deploy Your Hugo Site With Travis CI</title><link>https://www.eiken.dev/blog/2020/03/how-to-deploy-your-hugo-site-with-travis-ci/</link><pubDate>Sun, 01 Mar 2020 18:37:18 +0100</pubDate><author>hello@eiken.dev (eikendev)</author><guid>https://www.eiken.dev/blog/2020/03/how-to-deploy-your-hugo-site-with-travis-ci/</guid><description>&lt;h2 id="automation-time">Automation time!&lt;/h2>
&lt;p>I finally made it.
I finally switched over to using a static site generator.
Until now I was writing pure HTML by hand.
What a mess!&lt;/p>
&lt;p>I&amp;rsquo;ve been wanting to try Hugo for a while now.
It&amp;rsquo;s just that it takes a while to become familiar with a new tool.
Luckily, I already have some experience with static site generation so it didn&amp;rsquo;t take to long to identify the patterns.&lt;/p></description></item></channel></rss>